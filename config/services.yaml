# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*/*'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Plugins/Common/Repository/*'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/AppAdapter/'
            - '../src/Plugins/*/{Command, Entity, Enum, Exception}'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\AppAdapter\AppRequest:
        autowire: false

    App\AppAdapter\AppValidator:
        autowire: false

    App\EventListener\KernelRequestListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 33 }

    App\EventListener\KernelControllerListener:
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController, priority: 34 }
    App\EventListener\KernelResponseListener:
        tags:
            - { name: kernel.event_listener, event: kernel.view, method: onKernelResponse, priority: 36 }
    App\EventListener\KernelExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
    App\EventListener\KernelTerminateListener:
        tags:
            - { name: kernel.event_listener, event: kernel.terminate, method: onKernelFinishRequest, priority: 35 }
